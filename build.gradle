apply plugin: 'eclipse'
apply plugin: 'java'

group = 'org.ofm'
version = '1.0.1'
sourceCompatibility = 1.8

repositories {
	maven {
	        url "https://mvnrepository.com/"
	}
	mavenCentral()
}


dependencies {
	compile group: 'org.json', name: 'json', version: '20190722'
	//compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	//compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
	//compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.3'
	//compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
	//compile group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: '4.5.3'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.0'
	// https://mvnrepository.com/artifact/javax.mail/javax.mail-api
	//compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
	//compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
	//compile group: 'commons-io', name: 'commons-io', version: '2.6'
	// https://mvnrepository.com/artifact/commons-codec/commons-codec
	compile group: 'commons-codec', name: 'commons-codec', version: '1.13'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	//compile group: 'com.google.guava', name: 'guava', version: '19.0'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	//compile group: 'org.postgresql', name: 'postgresql', version: '42.2.6'

	// Use JUnit test framework
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'

}

jar {
	manifest {
		attributes 'Main-Class': 'org.ofm.cli.Driver'
	}

	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
